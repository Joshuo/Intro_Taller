class Fig:
    def __init__(self, x, y):
        self.__x = x
        self.__y = y

    def getX(self):
        return self.__x

    def setX(self, x):
        if x >= 0 and x <= 1023:
            self.__x = x
        else:
            print ("El valor de x debe ser mayor o igual a 0 y menor a 1024.")

    def getY(self):
        return self.__y

    def setY(self, y):
        if y >= 0 and <= 767:
            self.__y = y
        else:
            print("El valor de y debe ser mayor o igual a 0 y menor a 768.")

import math
from FiguraInicial import Fig

class Circulo(Fig):
    def __init__(self, x, y, r):
        super().__init__(x, y)
        self.__radio = r

    def getRadio(self):
        return self.__radio

    def setRadio(self, r):
        self.__radio = r

    def calcularArea(self):
        return math.pi * (self.__radio**2)

import math
from FiguraInicial import Fig

class Rectangulo(Fig):
    def __init__(self, x, y, alto, ancho):
        super().__init__(x, y)
        self.__alto = alto
        self.__ancho = ancho

    def getAlto(self):
        return self.__alto

    def setaAlto(self, alto):
        self.__alto = alto

    def getAncho(self):
        return self.__ancho

    def setAncho(self, ancho):
        self.__ancho = ancho

    def CalcularArea(self):
        return self.__alto * self.__ancho
-
class Invertir:
    def _init_(self):
        pass

    def invertir_lista(self, lista):
        if isinstance (lista, list):
            return self.invertir_lista_aux(lista)
        else:
            return "El valor asignado no es una lista."

    def invertir_lista_aux(self, lista):
        if lista == []:
            return []
        else:
            return self.invertir_lista_aux(lista[1:]) + [lista[0]]

    def invertir_lista_index(self, lista):
        if lista == []:
            return []
        else:
            return [lista[-1]] + self.invertir_lista_index(lista[:-1])
-
class Lista:
    def __init__(self):
        pass

    def suma(self, lista):
        self.__resultado = 0

        for i in lista:
            self.__resultado +=i

        return self.__resultado
